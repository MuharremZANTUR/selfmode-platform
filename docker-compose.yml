version: '3.8'

services:
  # MySQL Database
  mysql:
    image: mysql:8.0
    container_name: selfmode_mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      MYSQL_DATABASE: ${DB_NAME}
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${DB_PASSWORD}
    volumes:
      - mysql_data:/var/lib/mysql
      - ./mysql/init:/docker-entrypoint-initdb.d
    ports:
      - "3306:3306"
    networks:
      - selfmode_network
    command: --default-authentication-plugin=mysql_native_password

  # Redis for session management (optional)
  redis:
    image: redis:7-alpine
    container_name: selfmode_redis
    restart: unless-stopped
    volumes:
      - redis_data:/data
    networks:
      - selfmode_network

  # SelfMode Backend
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: selfmode_backend
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - DB_HOST=mysql
      - DB_PORT=3306
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME}
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    ports:
      - "5000:5000"
    depends_on:
      - mysql
      - redis
    networks:
      - selfmode_network
    volumes:
      - ./logs:/app/logs

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: selfmode_nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
      - ./logs/nginx:/var/log/nginx
    depends_on:
      - backend
    networks:
      - selfmode_network

volumes:
  mysql_data:
  redis_data:

networks:
  selfmode_network:
    driver: bridge
